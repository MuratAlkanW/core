name: Liman CI
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Getting Main Liman Repository
        uses: actions/checkout@v2
        with:
          path: package/liman/server

      - name: Getting Liman' PHP Sandbox
        uses: actions/checkout@v2
        with:
          repository: limanmys/php-sandbox
          path: package/liman/sandbox/php
          token: ${{ secrets.CI_TOKEN }}

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Getting Liman' WebSSH
        uses: actions/checkout@v2
        with:
          repository: limanmys/webssh
          path: package/liman/webssh
          token: ${{ secrets.CI_TOKEN }}
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          cd package/liman/server
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Set up Liman Environment
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.3"
          tools: composer
          extensions : ssh2, curl, sqlite3, ldap, mbstring, xml, zip, posix, smbclient, mongodb, gd
      - name: Build Liman Package
        env:
          ZULIP_KEY: ${{ secrets.ZULIP_KEY }}
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt install jq -y 1>/dev/null 2>/dev/null
          VERSION=`cat package/liman/server/storage/VERSION`
          echo $GITHUB_RUN_NUMBER > package/liman/server/storage/VERSION_CODE
          COMMIT="${GITHUB_REF#refs/heads/} : "
          COMMIT+=`git --git-dir=package/liman/server/.git log -1 --pretty=%B`
          COMMIT=`echo $COMMIT | jq -SrR @uri`
          DATE=$(date)
          composer install --no-dev -d package/liman/server
          git --git-dir=package/liman/server/.git log -30 --pretty=format:"%s%x09%ad" > package/liman/server/storage/changelog
          mv package/liman/server/.git .git
          rm -rf package/liman/webssh/.git package/liman/sandbox/php/.git
          rm -rf package/liman/server/node_modules
          mv package/liman/server/storage/build_tools/DEBIAN package/
          rm -rf package/liman/server/storage/build_tools
          cd package
          touch DEBIAN/md5sums
          touch DEBIAN/md5sums
          touch DEBIAN/control

          find . -type f ! -regex '.*.hg.*' ! -regex '.*?debian-binary.*' ! -regex '.*?DEBIAN.*' -printf '%P ' | xargs md5sum  1>/dev/null 2>/dev/null || true
          find . \( -name ".git" -o -name ".gitignore" -o -name ".gitmodules" -o -name ".gitattributes" \) -exec rm -rf -- {} + 1>/dev/null 2>/dev/null || true
          
          chmod 775 DEBIAN/preinst
          chmod 775 DEBIAN/postinst

          echo """Package: liman
          Version: $VERSION-$GITHUB_RUN_NUMBER
          Installed-Size: 77892
          Maintainer: Mert CELEN <mcelen@havelsan.com.tr>
          Section: admin
          Date : $DATE
          Architecture: amd64
          Priority: important
          Description: Liman MYS
          Depends: gpg, zip, unzip, nginx, redis, php-redis, php7.3-fpm, php7.3-curl, php7.3, php7.3-sqlite3, php7.3-snmp, php7.3-mbstring, php7.3-xml, php7.3-zip, php7.3-posix, libnginx-mod-http-headers-more-filter, libssl1.1, supervisor
          """ > DEBIAN/control
          cd ../
          dpkg-deb -Zgzip --build package

          FILE_NAME="liman-${GITHUB_REF#refs/heads/}-$GITHUB_RUN_NUMBER.deb"
          mv package.deb $FILE_NAME

          DEBIAN_FRONTEND=noninteractive sudo apt install jq -y 1>/dev/null 2>/dev/null
          CHANNEL_NAME="liman-release"
          MAIN_FILE=$FILE_NAME
          GIT_DIR=".git"
          VERSION=$GITHUB_RUN_NUMBER

          COMMIT=`git --git-dir=$GIT_DIR log -1 --pretty=%B`
          COMMIT=`echo $COMMIT | jq -SrR @uri`
          SENDER=`git --git-dir=$GIT_DIR log -1 --pretty=%cN`
          SENDER=`echo $SENDER | jq -SrR @uri`
          COMMIT_DATE=`git --git-dir=$GIT_DIR log -1 --pretty=%ai`
          COMMIT_DATE=`echo $COMMIT_DATE | jq -SrR @uri`
          FILE_HASH=$(sha256sum $MAIN_FILE | cut -d " " -f 1)
          curl -sSX POST https://limanmys.zulipchat.com/api/v1/users/me/subscriptions \
            -u github-releaser-bot@zulipchat.com:$ZULIP_KEY \
            --data-urlencode subscriptions="[{\"description\": \"Created by Liman BOT\", \"name\": \"$CHANNEL_NAME\"}]" \
            -d "accounce=true" -d "stream_post_policy:2"
          echo $MAIN_FILE
          curl -sSX POST https://limanmys.zulipchat.com/api/v1/user_uploads \
            -u github-releaser-bot@zulipchat.com:$ZULIP_KEY \
            -F "filename=@$MAIN_FILE"
          FILE_URL=https://limanmys.zulipchat.com$(curl -sSX POST https://limanmys.zulipchat.com/api/v1/user_uploads \
            -u github-releaser-bot@zulipchat.com:$ZULIP_KEY \
            -F "filename=@$MAIN_FILE" | jq -r ".uri")
          echo $FILE_URL
          curl -X POST https://limanmys.zulipchat.com/api/v1/messages \
            -u github-releaser-bot@zulipchat.com:$ZULIP_KEY \
            -d "type=stream" \
            -d "to=$CHANNEL_NAME" \
            -d "topic=${GITHUB_REF#refs/heads/}" \
            --data "content=%0ABranch: ${GITHUB_REF#refs/heads/}%0A%0ACommiter: ${SENDER}%0ADate: ${COMMIT_DATE}%0A%0AMessage: ${COMMIT}%0AVersion: ${VERSION}%0A%0ADownload Link: ${FILE_URL}%0A%0AFile Hash: ${FILE_HASH}"