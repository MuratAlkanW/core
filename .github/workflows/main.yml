name: Liman CI
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Getting Main Liman Repository
        uses: actions/checkout@v2
        with:
          path: package/liman/server

      - name: Getting Liman' Extension Templates
        uses: actions/checkout@v2
        with:
          repository: limanmys/extension_templates
          path: package/liman/server/storage/extension_templates
          token: ${{ secrets.CI_TOKEN }}
      - name: Getting Liman' PHP Sandbox
        uses: actions/checkout@v2
        with:
          repository: limanmys/php-sandbox
          path: package/liman/sandbox/php
          token: ${{ secrets.CI_TOKEN }}
          ref: "1.5-dev"
      - name: Getting Liman' Render Engine
        uses: actions/checkout@v2
        with:
          repository: limanmys/go
          path: render_engine
          token: ${{ secrets.CI_TOKEN }}
          ref: "postgresql"
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Getting Liman' WebSSH
        uses: actions/checkout@v2
        with:
          repository: limanmys/webssh
          path: package/liman/webssh
          token: ${{ secrets.CI_TOKEN }}
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          cd package/liman/server
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Set up Liman Environment
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.3"
          tools: composer
          extensions : ssh2, curl, sqlite3, ldap, mbstring, xml, zip, posix, smbclient, mongodb, gd
      - name: Build Liman Package
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        run: |
          VERSION=$(cat package/liman/server/storage/VERSION)
          bash package/liman/server/storage/create_deb.sh
          ls -lah package.deb
          sha256sum package.deb
          [ "$GITHUB_REF" == "refs/heads/master" ] && CHANNEL="liman-release" || CHANNEL="liman-dev-release"
          [ "$GITHUB_REF" == "refs/heads/master" ] && FILE_NAME="liman-$VERSION-$GITHUB_RUN_NUMBER.deb" || FILE_NAME="liman-${GITHUB_REF#refs/heads/}-$VERSION-$GITHUB_RUN_NUMBER.deb"
          curl -F "file=@package.deb" "https://slack.com/api/files.upload?token=$SLACK_TOKEN&channels=$CHANNEL&filename=$FILE_NAME&pretty=1&initial_comment=$COMMIT" || echo
